name: Wave 12 Source Verification

on:
  schedule:
    # Run every 6 hours to monitor RSS feed health
    - cron: "0 */6 * * *"
  workflow_dispatch: # Allow manual trigger
    inputs:
      workers:
        description: 'Number of concurrent workers'
        required: false
        default: '10'
      timeout:
        description: 'Timeout per source (seconds)'
        required: false
        default: '10'

jobs:
  verify-sources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('ingestion/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd ingestion
          pip install -r requirements.txt

      - name: Run source verification
        id: verify
        run: |
          cd ingestion
          python3 verify_sources_cli.py --github-actions --verbose > verification_output.txt 2>&1
          EXIT_CODE=$?
          cat verification_output.txt
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT
          exit 0  # Don't fail workflow, handle in next step

      - name: Upload verification report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: source-verification-report
          path: ingestion/verification_output.txt
          retention-days: 30

      - name: Check for critical failures
        if: steps.verify.outputs.exit_code != '0'
        run: |
          cd ingestion

          # Count failed sources
          FAILED_COUNT=$(grep -c "❌ FAILED" verification_output.txt || echo "0")

          echo "Failed sources: $FAILED_COUNT"

          if [ "$FAILED_COUNT" -ge 10 ]; then
            echo "::error::CRITICAL: $FAILED_COUNT sources are down!"
            echo "::warning::Check verification report artifact for details"
            exit 1
          else
            echo "::notice::$FAILED_COUNT sources failed (below critical threshold of 10)"
          fi

      - name: Create issue on critical failure
        if: failure() && steps.verify.outputs.exit_code != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('ingestion/verification_output.txt', 'utf8');

            // Extract failed sources
            const failedSources = output.match(/❌ FAILED:.*/g) || [];
            const failedCount = failedSources.length;

            // Create issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 CRITICAL: ${failedCount} RSS sources are down`,
              body: `## Source Verification Alert

            **Status**: 🔴 CRITICAL FAILURE
            **Failed Sources**: ${failedCount}/77
            **Detected**: ${new Date().toISOString()}
            **Workflow Run**: [View Details](${context.payload.repository.html_url}/actions/runs/${context.runId})

            ### Failed Sources

            \`\`\`
            ${failedSources.slice(0, 20).join('\n')}
            ${failedCount > 20 ? `\n... and ${failedCount - 20} more` : ''}
            \`\`\`

            ### Action Required

            1. Download the [verification report artifact](${context.payload.repository.html_url}/actions/runs/${context.runId})
            2. Review failed sources and identify root causes
            3. Update \`ingestion/config.py\` to remove permanently broken sources
            4. Monitor next verification run (every 6 hours)

            ### Automatic Issue Closure

            This issue will auto-close when source health improves (<10 failures).

            ---

            *Generated by Wave 12 Source Verification System*
            *Workflow: \`verify-sources.yml\`*`,
              labels: ['automated', 'critical', 'sources']
            });

      - name: Summary
        if: always()
        run: |
          cd ingestion
          echo "## Wave 12 Source Verification Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f verification_output.txt ]; then
            # Extract key metrics
            WORKING=$(grep -c "✅ WORKING" verification_output.txt || echo "0")
            FAILED=$(grep -c "❌ FAILED" verification_output.txt || echo "0")

            echo "- **Working Sources**: $WORKING" >> $GITHUB_STEP_SUMMARY
            echo "- **Failed Sources**: $FAILED" >> $GITHUB_STEP_SUMMARY
            echo "- **Exit Code**: ${{ steps.verify.outputs.exit_code }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Download the artifact for full details." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ No verification output found" >> $GITHUB_STEP_SUMMARY
          fi
